name: CI

on: [push, pull_request]

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        rust-version: [stable]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          submodules: "true"

      - name: Use Rust toolchain
        run: rustup update ${{ matrix.rust-version }} && rustup default ${{ matrix.rust-version }}

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install clippy
        run: rustup component add clippy

      - name: Build cache
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-${{ matrix.rust-version }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust-version }}-

      - name: Compile
        run: cargo build

      - name: Format
        run: cargo fmt --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Tests
        run: cargo test
